apiVersion: v1
kind: Namespace
metadata:
  name: social-network
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/name: social-network-spring-configuration
  name: social-network-manager-backend
  namespace: social-network
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: 1.0.0-SNAPSHOT
      app.kubernetes.io/name: social-network-spring-configuration
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/name: social-network-spring-configuration
      namespace: social-network
    spec:
      containers:
        - name: social-network-manager-backend
          image: alejandrotrilla/social-network-spring-configuration:1.0.0-SNAPSHOT
---
apiVersion: v1
kind: Service
metadata:
  name: social-network-manager-backend
  namespace: social-network
spec:
  selector:
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/name: social-network-spring-configuration
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: social-network-manager-backend-ingress
  namespace: social-network
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-headers: Content-Type
    nginx.ingress.kubernetes.io/cors-allow-methods: POST, GET, DELETE, PUT
    nginx.ingress.kubernetes.io/cors-allow-origin: 'http://social-network-frontend'
    nginx.ingress.kubernetes.io/cors-expose-headers: X-Custom-Header
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  rules:
    - host: social-network-manager-backend
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: social-network-manager-backend
                port:
                  number: 8080
